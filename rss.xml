<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
    <title>Everything Burns</title>
  <link>https://jimfl.github.io/everything-burns/</link>
  <description>Re-ignited</description>
  <lastBuildDate>Sun, 06 Nov 22 18:02:15 +0000</lastBuildDate>
  <language>en-us</language>

  <item>
  <title>Escher-inspired Tesselations With Marked Tiles</title>
  <description><![CDATA[
<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <title>Escher-inspired Tesselations With Marked Tiles - Everything Burns</title>
    <link rel="stylesheet" href="/everything-burns/assets/css/style.css">
    <link rel="stylesheet" href="/everything-burns/assets/css/prism.css">
    
<!--==========================================-->
<!-- Override "includes/head-extras.html.eex" -->
<!-- to add more tags inside this <head> tag. -->
<!--==========================================-->

  </head>
  <body>
    <div id="wrapper">
      <header id="top">
<h1><a href="/everything-burns/">Everything Burns</a></h1>
<p>Re-ignited</p>
</header>
      <nav>
<ul>
  <li><a href="/everything-burns/index.html">Home</a></li>
  <li><a href="/everything-burns/posts">Posts</a></li>
</ul>
</nav>
      <hr>
      <main><article class="post"><header><h1 id="escher-inspired-tesselations-with-marked-tiles">Escher-inspired Tesselations With Marked Tiles</h1><p>
      Monday, 31 Oct 2022
      
        <span class="tags">
          Tags:
          
            <a class="tag" href="/everything-burns/tags/escher">escher</a><a class="tag" href="/everything-burns/tags/math">math</a><a class="tag" href="/everything-burns/tags/processing">processing</a><a class="tag" href="/everything-burns/tags/tesselations">tesselations</a></span></p></header><div><p>Some while ago (during or not too long after my college years), I
found the following page in a collection of M.C. Escher’s notebooks,
describing overlapping motifs on tiles, which, when arranged in
various rotations, result in woven designs.</p><p><img src="/everything-burns/media/escher/EscherNotebook.jpg" alt="Marked tiles from Escher&#39;s notebooks"/></p><p>Using Adobe Illustrator at the time, I experimented with some tiles
of my own. Initially I made some squares, but eventually designed some hexagonal
tiles as well.</p><p>Recently I resurrected the square designs to start working with
these by programming because it is tedious to do it by hand. Using
the <a href="http://processing.org">Processing</a> language, I made two tiles,
an “over” version and an “under” version.</p><p><img src="/everything-burns/media/escher/ExampleTiles.jpg" alt="Over and Under Tiles"/></p><p>Why they’re labeled “^” and “M” I’ll get to in a moment. Here’s a random tiling
with both tiles, in various rotations.</p><p><img src="/everything-burns/media/escher/random.png" alt="Random Square Tiling"/></p><p>Once I could draw the tiles, I wanted to create more controlled layouts, using 
<a href="https://www.sciencedirect.com/science/article/pii/S0723086908000042">tile substitution</a>.</p><p>In order to define substitution rules, I needed an alphabet to
describe both the over and under tiles, in the various rotations.
Escher used “A” and “B” with under bars to represent the “over-underness”,
and then rotated the letters. I noodled a bit with Unicode characters
that had rotations, thinking “T” and “E” (as in T and E modules)
would be nice choices for reasons that maybe one other person I know might
understand.</p><p>Being lazy, I preferred to use ASCII characters, and I settled on the following alphabet to represent the rotations of the over and under tiles:</p><pre><code class="">^ &gt; v &lt; 
M 3 W E</code></pre><p>Having an alphabet, I could now represent substitutions of one tile for a quad of 4 tiles,
like this:</p><p><img src="/everything-burns/media/escher/substitutionRule.png" alt="Substitution Rule as an image"/></p><pre><code class="">M -&gt; &lt; E
     3 &gt;</code></pre><p>or, more succinctly as</p><pre><code class="">M -&gt; &lt;E|3&gt;</code></pre><p>Now, given a ruleset like </p><pre><code class="">^ -&gt; EE|33
&gt; -&gt; MW|WM
v -&gt; 33|EE
&lt; -&gt; WM|MW
M -&gt; &lt;E|3&gt;
3 -&gt; ^v|M^
W -&gt; 3&gt;|&lt;E
E -&gt; v^|Mv</code></pre><p>Starting with an axiom of ‘^’ and doing 3 iterations of substitutions (replace the axiom, then replace each of those 4 squares, then replace each of those 16 squares…) you get 
a somewhat more orderly design.</p><p><img src="/everything-burns/media/escher/substitution.png" alt="32x32 substitution design"/></p><p>Which is represented by</p><pre><code class="">E E 3 3 E E 3 3 3 3 E E 3 3 E E E E 3 3 E E 3 3 3 3 E E 3 3 E E
3 3 E E 3 3 E E E E 3 3 E E 3 3 3 3 E E 3 3 E E E E 3 3 E E 3 3
&lt; E E E &lt; E E E &lt; E 3 3 &lt; E 3 3 &lt; E E E &lt; E E E &lt; E 3 3 &lt; E 3 3
3 &gt; 3 3 3 &gt; 3 3 3 &gt; E E 3 &gt; E E 3 &gt; 3 3 3 &gt; 3 3 3 &gt; E E 3 &gt; E E
3 3 E E 3 3 E E E E 3 3 E E 3 3 3 3 E E 3 3 E E E E 3 3 E E 3 3
E E 3 3 E E 3 3 3 3 E E 3 3 E E E E 3 3 E E 3 3 3 3 E E 3 3 E E
&lt; E 3 3 &lt; E 3 3 &lt; E E E &lt; E E E &lt; E 3 3 &lt; E 3 3 &lt; E E E &lt; E E E
3 &gt; E E 3 &gt; E E 3 &gt; 3 3 3 &gt; 3 3 3 &gt; E E 3 &gt; E E 3 &gt; 3 3 3 &gt; 3 3
3 &gt; &lt; E 3 3 E E E E 3 3 E E 3 3 3 &gt; &lt; E 3 3 E E E E 3 3 E E 3 3
&lt; E 3 &gt; E E 3 3 3 3 E E 3 3 E E &lt; E 3 &gt; E E 3 3 3 3 E E 3 3 E E
&lt; E 3 &gt; &lt; E 3 3 &lt; E E E &lt; E E E &lt; E 3 &gt; &lt; E 3 3 &lt; E E E &lt; E E E
3 &gt; &lt; E 3 &gt; E E 3 &gt; 3 3 3 &gt; 3 3 3 &gt; &lt; E 3 &gt; E E 3 &gt; 3 3 3 &gt; 3 3
E E 3 3 &lt; E 3 &gt; 3 3 E E 3 3 E E E E 3 3 &lt; E 3 &gt; 3 3 E E 3 3 E E
3 3 E E 3 &gt; &lt; E E E 3 3 E E 3 3 3 3 E E 3 &gt; &lt; E E E 3 3 E E 3 3
&lt; E E E 3 &gt; &lt; E &lt; E 3 3 &lt; E 3 3 &lt; E E E 3 &gt; &lt; E &lt; E 3 3 &lt; E 3 3
3 &gt; 3 3 &lt; E 3 &gt; 3 &gt; E E 3 &gt; E E 3 &gt; 3 3 &lt; E 3 &gt; 3 &gt; E E 3 &gt; E E
3 3 E E 3 3 E E E E 3 3 E E 3 3 3 3 E E 3 3 E E E E 3 3 E E 3 3
E E 3 3 E E 3 3 3 3 E E 3 3 E E E E 3 3 E E 3 3 3 3 E E 3 3 E E
&lt; E 3 3 &lt; E 3 3 &lt; E E E &lt; E E E &lt; E 3 3 &lt; E 3 3 &lt; E E E &lt; E E E
3 &gt; E E 3 &gt; E E 3 &gt; 3 3 3 &gt; 3 3 3 &gt; E E 3 &gt; E E 3 &gt; 3 3 3 &gt; 3 3
E E 3 3 E E 3 3 3 3 E E 3 3 E E E E 3 3 E E 3 3 3 3 E E 3 3 E E
3 3 E E 3 3 E E E E 3 3 E E 3 3 3 3 E E 3 3 E E E E 3 3 E E 3 3
&lt; E E E &lt; E E E &lt; E 3 3 &lt; E 3 3 &lt; E E E &lt; E E E &lt; E 3 3 &lt; E 3 3
3 &gt; 3 3 3 &gt; 3 3 3 &gt; E E 3 &gt; E E 3 &gt; 3 3 3 &gt; 3 3 3 &gt; E E 3 &gt; E E
3 &gt; &lt; E 3 3 E E 3 3 E E 3 3 E E 3 &gt; &lt; E 3 3 E E 3 3 E E 3 3 E E
&lt; E 3 &gt; E E 3 3 E E 3 3 E E 3 3 &lt; E 3 &gt; E E 3 3 E E 3 3 E E 3 3
&lt; E 3 &gt; &lt; E 3 3 &lt; E 3 3 &lt; E 3 3 &lt; E 3 &gt; &lt; E 3 3 &lt; E 3 3 &lt; E 3 3
3 &gt; &lt; E 3 &gt; E E 3 &gt; E E 3 &gt; E E 3 &gt; &lt; E 3 &gt; E E 3 &gt; E E 3 &gt; E E
E E 3 3 &lt; E 3 &gt; E E 3 3 E E 3 3 E E 3 3 &lt; E 3 &gt; E E 3 3 E E 3 3
3 3 E E 3 &gt; &lt; E 3 3 E E 3 3 E E 3 3 E E 3 &gt; &lt; E 3 3 E E 3 3 E E
&lt; E E E 3 &gt; &lt; E &lt; E E E &lt; E E E &lt; E E E 3 &gt; &lt; E &lt; E E E &lt; E E E
3 &gt; 3 3 &lt; E 3 &gt; 3 &gt; 3 3 3 &gt; 3 3 3 &gt; 3 3 &lt; E 3 &gt; 3 &gt; 3 3 3 &gt; 3 3</code></pre></div></article></main>
      <hr>
      <footer>
        
<!--=====================================-->
<!-- Override "includes/footer.html.eex" -->
<!-- to customize your footer contents.  -->
<!--=====================================-->

        <p>
          Powered by <a href="https://github.com/Dalgona/Serum">Serum</a> v1.5.1,
          with <a href="https://github.com/Dalgona/serum-theme-essence">Essence</a> theme
        </p>
      </footer>
    </div>
    <script src="/everything-burns/assets/js/prism.js"></script>
  </body>
</html>
<script>
const ws_url = "ws://" + location.host + "/serum_live_reloader";
var ws;

connect();

function connect() {
  ws = new WebSocket(ws_url);
  ws.onmessage = onMessage;
  ws.onclose = onClose;
}

function onMessage(e) {
  if (e.data === "reload") {
    location.reload();
  }
}

function onClose(e) {
  console.warn("WebSocket disconnected from server. Reconnecting in 10 seconds.");
  setTimeout(connect, 10000)
}
</script>
]]></description>
  <pubDate>Sun, 06 Nov 22 18:02:15 +0000</pubDate>
  <link>https://jimfl.github.io/everything-burns//everything-burns/posts/2022-10-31-escher.html</link>
  <guid>https://jimfl.github.io/everything-burns//everything-burns/posts/2022-10-31-escher.html</guid>
</item>

</channel>
</rss>
